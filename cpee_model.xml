<testset xmlns="http://cpee.org/ns/properties/2.0">
  <executionhandler>ruby</executionhandler>
  <dataelements>
    <enable_py_speech_to_text>true</enable_py_speech_to_text>
    <enable_openai_order_detection>true</enable_openai_order_detection>
  </dataelements>
  <endpoints>
    <user>https-post://cpee.org/services/timeout-user.php</user>
    <auto>https-post://cpee.org/services/timeout-auto.php</auto>
    <subprocess>https-post://cpee.org/flow/start/url/</subprocess>
    <timeout>https://cpee.org/services/timeout.php</timeout>
    <send>https-post://cpee.org/ing/correlators/message/send/</send>
    <receive>https-get://cpee.org/ing/correlators/message/receive/</receive>
    <put>https://lehre.bpm.in.tum.de/ports/8001/cpee_interface_put</put>
    <py_speech_recognition>https://lehre.bpm.in.tum.de/ports/8003/cpee_interface_py_speech_recognition</py_speech_recognition>
    <voice2json>https://lehre.bpm.in.tum.de/ports/8003/cpee_interface_voice2json</voice2json>
    <order_detection>https://lehre.bpm.in.tum.de/ports/8004/cpee_interface_order_detection</order_detection>
  </endpoints>
  <attributes>
    <info>Enter info here</info>
    <modeltype>CPEE</modeltype>
    <theme>extended</theme>
  </attributes>
  <description>
    <description xmlns="http://cpee.org/ns/description/1.0">
      <loop mode="pre_test" condition="true">
        <_probability>
          <_probability_min/>
          <_probability_max/>
          <_probability_avg/>
        </_probability>
        <call id="a1" endpoint="put">
          <parameters>
            <label>Wait for Order</label>
            <method>:get</method>
            <arguments/>
          </parameters>
          <code>
            <prepare/>
            <finalize output="result">data.audio_order = result</finalize>
            <update output="result"/>
            <rescue output="result"/>
          </code>
          <annotations>
            <_generic/>
            <_timing>
              <_timing_weight/>
              <_timing_avg/>
              <explanations/>
            </_timing>
            <_shifting>
              <_shifting_type>Duration</_shifting_type>
            </_shifting>
            <_context_data_analysis>
              <probes/>
              <ips/>
            </_context_data_analysis>
            <report>
              <url/>
            </report>
            <_notes>
              <_notes_general/>
            </_notes>
          </annotations>
          <documentation>
            <input/>
            <output/>
            <implementation>
              <description/>
            </implementation>
            <code>
              <description/>
            </code>
          </documentation>
        </call>
        <choose mode="exclusive">
          <alternative condition="data.enable_py_speech_to_text == true">
            <_probability>
              <_probability_min/>
              <_probability_max/>
              <_probability_avg/>
            </_probability>
            <call id="a3" endpoint="py_speech_recognition">
              <parameters>
                <label>Transform Audio to Text Py Speech Recognition</label>
                <method>:get</method>
                <arguments>
                  <order_url>!data.audio_order['url']</order_url>
                </arguments>
              </parameters>
              <code>
                <prepare/>
                <finalize output="result">data.ordertext = result</finalize>
                <update output="result"/>
                <rescue output="result"/>
              </code>
              <annotations>
                <_generic/>
                <_timing>
                  <_timing_weight/>
                  <_timing_avg/>
                  <explanations/>
                </_timing>
                <_shifting>
                  <_shifting_type>Duration</_shifting_type>
                </_shifting>
                <_context_data_analysis>
                  <probes/>
                  <ips/>
                </_context_data_analysis>
                <report>
                  <url/>
                </report>
                <_notes>
                  <_notes_general/>
                </_notes>
              </annotations>
              <documentation>
                <input/>
                <output/>
                <implementation>
                  <description/>
                </implementation>
                <code>
                  <description/>
                </code>
              </documentation>
            </call>
          </alternative>
          <otherwise>
            <_probability>
              <_probability_min/>
              <_probability_max/>
              <_probability_avg/>
            </_probability>
            <call id="a5" endpoint="voice2json">
              <parameters>
                <label>Transform Audio to Text Voice2JSON</label>
                <method>:get</method>
                <arguments>
                  <order_url>!data.audio_order['url']</order_url>
                </arguments>
              </parameters>
              <code>
                <prepare/>
                <finalize output="result">data.ordertext = result</finalize>
                <update output="result"/>
                <rescue output="result"/>
              </code>
              <annotations>
                <_generic/>
                <_timing>
                  <_timing_weight/>
                  <_timing_avg/>
                  <explanations/>
                </_timing>
                <_shifting>
                  <_shifting_type>Duration</_shifting_type>
                </_shifting>
                <_context_data_analysis>
                  <probes/>
                  <ips/>
                </_context_data_analysis>
                <report>
                  <url/>
                </report>
                <_notes>
                  <_notes_general/>
                </_notes>
              </annotations>
              <documentation>
                <input/>
                <output/>
                <implementation>
                  <description/>
                </implementation>
                <code>
                  <description/>
                </code>
              </documentation>
            </call>
          </otherwise>
        </choose>
        <choose mode="exclusive">
          <alternative condition="data.enable_openai_order_detection == true">
            <call id="a2" endpoint="order_detection">
              <parameters>
                <label>Order Detection</label>
                <method>:get</method>
                <arguments>
                  <ordertext>!data.ordertext['text']</ordertext>
                </arguments>
              </parameters>
              <code>
                <prepare/>
                <finalize output="result"/>
                <update output="result">data.order = result</update>
                <rescue output="result"/>
              </code>
              <annotations>
                <_generic/>
                <_timing>
                  <_timing_weight/>
                  <_timing_avg/>
                  <explanations/>
                </_timing>
                <_shifting>
                  <_shifting_type>Duration</_shifting_type>
                </_shifting>
                <_context_data_analysis>
                  <probes/>
                  <ips/>
                </_context_data_analysis>
                <report>
                  <url/>
                </report>
                <_notes>
                  <_notes_general/>
                </_notes>
              </annotations>
              <documentation>
                <input/>
                <output/>
                <implementation>
                  <description/>
                </implementation>
                <code>
                  <description/>
                </code>
              </documentation>
            </call>
            <_probability>
              <_probability_min/>
              <_probability_max/>
              <_probability_avg/>
            </_probability>
          </alternative>
          <otherwise/>
        </choose>
      </loop>
    </description>
  </description>
  <transformation>
    <description type="copy"/>
    <dataelements type="none"/>
    <endpoints type="none"/>
  </transformation>
</testset>